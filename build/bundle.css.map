{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n  import \"../node_modules/bootstrap/dist/css/bootstrap-grid.min.css\";\n  \n  let groupsJsonStr = localStorage.getItem(\"itemGroups\")\n  let groups = groupsJsonStr ? JSON.parse(groupsJsonStr) : [];\n  let editingGroup = -1;\n  \n  // groups = groupsJsonStr ? JSON.parse(groupsJsonStr) : []\n  \n  $ : {\n    if (groups){\n      localStorage.setItem(\"itemGroups\", JSON.stringify(groups));      \n    }\n    // console.log(groups.map((g)=>g.items).map((item=>item.price * item.qtysold)))\n  }\n  \n  $: allItems = groups.map((g)=>g.items).reduce((items1, items2) => [...items1, ...items2], [])\n  $: totalAmt = allItems.map((item) => item.price * item.qtysold).reduce((p1, p2) => p1 + p2, 0);\n\n  function setEditGroup(groupIdx) {\n    editingGroup = groupIdx;\n  }\n\n  function resetEditGroup() {\n    setEditGroup(-1);\n  }\n\n  function removeGroup(groupIdx) {\n    groups = [...groups.slice(0, groupIdx), ...groups.slice(groupIdx + 1)];\n    resetEditGroup();\n  }\n\n</script>\n\n<div class=\"container\">\n  <!-- <div class=\"table-responsive\"> -->\n  <!-- <div>\n    <button type=\"button\" class=\"btn btn-light\">Calc</button> \n    <button type=\"button\" class=\"btn btn-light\">Edit</button>\n  </div> -->\n  <div>\n    <table class=\"table table-bordered table-hover align-middle\">\n      <thead style=\"font-size:larger;\">\n        <tr class=\"table-warning\">\n          <th class=\"text-center\" style=\"width: 28%\">ÂìÅÈ†Ö</th>\n          <th style=\"width: 15%\">ÂñÆÂÉπ</th>\n          <th class=\"text-center\">Êï∏Èáè</th>\n          <th style=\"width: 24%\">Â∞èË®à</th>\n        </tr>\n      </thead>\n      {#each groups as group, i}\n        <tbody>\n          <tr class=\"table-info\">\n            <th colspan=\"100%\">\n              <span class=\"h4\">\n                {#if editingGroup == i}    \n                  <div class=\"row\">\n                    <div class=\"col-5\">\n                      <div class=\"input-group input-group-lg\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Item group name\"  bind:value=\"{group.name}\">\n                      </div>\n                      \n                    </div>\n                    <div class=\"col-auto\">\n                      <button class=\"btn btn-warning\" on:click={resetEditGroup}>Done</button>\n                    </div>\n                    <div class=\"col text-end\">\n                      <button class=\"btn btn-danger btn-sm\" on:click={()=>{removeGroup(i)}}>ÁßªÈô§</button>\n                    </div>\n                  </div>         \n                  \n                  <!-- <input class=\"p-1 form-control\" type=\"text\" size={(group.name && group.name.length) ? group.name.length: 1}  bind:value=\"{group.name}\"> -->\n                {:else}\n                  {i+1}. {group.name && group.name.trim() !== '' ? group.name : \"<no-name>\"}\n                {/if}\n                \n              </span>               \n              \n              {#if editingGroup == -1}\n                <button class=\"btn btn-outline-secondary\" on:click=\"{() => {editingGroup = i;}}\">‰øÆÊîπ</button>\n              {/if}\n\n            </th>\n          </tr>\n          {#each group.items as item, j}\n            <tr>\n              <td>\n                <div class=\"align-items-center\">\n                  \n                  {#if editingGroup == i}\n                    <div class=\"input-group align-items-center text-nowrap\">\n                      <input type=\"text\" class=\"form-control text-center\" style=\"font-size:large;\" bind:value=\"{item.name}\">\n                      <button class=\"btn btn-outline-danger\" on:click=\"{()=>{\n                        group.items = [...group.items.slice(0, j), ...group.items.slice(j + 1)]\n                      }}\">üóë</button>\n                    </div>\n                  {:else}\n                    <div class=\"text-center\">\n                      {item.name}\n                    </div>\n                  {/if}\n                  \n                </div>\n                \n              </td>\n              <td class=\"text-nowrap\">\n                {#if editingGroup == i}\n                  <div class=\"input-group\">\n                    <input type=\"number\" class=\"form-control\" aria-label=\"Amount\" min=\"1\" max=\"99999\" bind:value=\"{item.price}\">\n                  </div>\n                {:else}\n                  $ {item.price}\n                {/if}\n              </td>\n              <td >\n\n                <div class=\"input-group text-center align-items-center text-nowrap\">\n                  <button on:click=\"{() => {if (item.qtysold > 0) item.qtysold -= 1;}}\" class=\"btn btn-danger\"> - </button>\n                  {#if editingGroup == i}\n                    <input class=\"text-center form-control\" type=\"number\" min=\"0\" max=\"99999\" bind:value=\"{item.qtysold}\">\n                  {:else}\n                    <span class=\"form-control\" style=\"border:none\">{item.qtysold}</span> \n                  {/if}\n                  <button on:click=\"{() => {item.qtysold += 1;}}\" class=\"btn btn-success\"> + </button>\n                </div>\n              </td>\n              <td class=\"text-nowrap\">\n                $ {!item.price || !item.qtysold ? 0 : item.price * item.qtysold}\n              </td>\n            </tr>\n          {/each}\n          <tr style=\"font-weight:bold; font-size:large\">\n            <td colspan=\"3\"></td>\n            <td>\n              $ {group.items.map((item) => item.price * item.qtysold).reduce((x,y) => {return x+y;}, 0)}\n            </td>\n          </tr>\n          {#if editingGroup == i}\n            <tr>\n              <td colspan=\"100%\">\n                <div class=\"d-grid gap-2 col-5 mx-aut\">\n                  <button class=\"btn btn-outline-primary \" type=\"button\" on:click=\"{()=>{\n                    group.items = [...group.items, {\n                      \"name\": \"\",\n                      \"price\": 0,\n                      \"qtysold\": 0,\n                    }]\n                  }}\">+ÂìÅÈ†Ö</button>\n                </div>\n              </td>\n            </tr>\n          {/if}\n        </tbody>\n      {/each}\n      <tfoot>\n        <tr style=\"font-weight:bold; font-size:x-large\">\n          <td colspan=\"3\" style=\"text-align: right\">\n            Á∏ΩÈ°ç\n          </td>\n          <td>\n            $ {totalAmt}\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  </div>\n\n  {#if editingGroup === -1}\n    <button class=\"btn btn-primary btn-lg\" on:click=\"{() => {\n      groups = [...groups, {\n          \"name\": \"\", \n          \"items\": [\n            {\n              \"name\": \"\",\n              \"price\": 0,\n              \"qtysold\": 0,\n            }    \n          ]\n        }\n      ]; \n      editingGroup = groups.length - 1\n    }}\">+ ÂïÜÂìÅÁæ§</button>\n  {/if}\n\n</div>\n\n<style>\n  button {\n    touch-action: manipulation;\n  }\n  thead, thead tr, thead th{\n    position: sticky; \n    top: 0; \n    z-index: 10;\n  }\n\n  td {\n    font-size:large;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AA4LE,MAAM,4BAAC,CAAC,AACN,YAAY,CAAE,YAAY,AAC5B,CAAC,AACD,iCAAK,CAAE,mBAAK,CAAC,gBAAE,CAAE,mBAAK,CAAC,gBAAE,CAAC,AACxB,QAAQ,CAAE,MAAM,CAChB,GAAG,CAAE,CAAC,CACN,OAAO,CAAE,EAAE,AACb,CAAC,AAED,EAAE,4BAAC,CAAC,AACF,UAAU,KAAK,AACjB,CAAC"
}